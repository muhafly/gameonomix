import json
import math
import numpy as np
from django.http import JsonResponse
scores_array=[[100,	200,	300,	400,	500,	600,	700,	800,	900,	1000],
                [202.2222222,	411.1111111,	600,	813.3333333,	1000,	1222.222222,	1422.222222,	1642.222222,	1822.222222,	2022.222222],
                [306.6666667,	633.3333333,	900,	1240,	1500,	1866.666667,	2166.666667,	2526.666667,	2766.666667,	3066.666667],
                [413.3333333,	866.6666667,	1200,	1680,	2000,	2533.333333,	2933.333333,	3453.333333,	3733.333333,	4133.333333], 
                [522.2222222,	1111.111111,	1500,	2133.333333,	2500,	3222.222222,	3722.222222,	4422.222222,	4722.222222,	5222.222222],
                [633.3333333,	1366.666667,	1800,	2600,	3000,	3933.333333,	4533.333333,	5433.333333,	5733.333333,	6333.333333],
                [746.6666667,	1633.333333,	2100,	3080,	3500,	4666.666667,	5366.666667,	6486.666667,	6766.666667,	7466.666667],
                [862.2222222,	1911.111111,	2400,	3573.333333,	4000,	5422.222222,	6222.222222,	7582.222222,	7822.222222,	8622.222222],
                [980,	2200,	2700,	4080,	4500,	6200,	7100,	8720,	8900,	9800],
                [1100,	2500,	3000,	4600,	5000,	7000,	8000,	9900,	10000,	11000],
                [1199,	2695,	3397.68,	4994,	5662.8,	7590,	8690,	10681,	10890,	11990],
                [1296,	2880.0,	3813.12,	5376,	6355.2,	8160,	9360,	11424,	11760,	12960],
                [1391,	3055,	4246.32,	5746,	7077.2,	8710,	10010,	12129,	12610,	13910],
                [1484,	3220,	4697.28,	6104,	7828.8,	9240,	10640,	12796,	13440,	14840],
                [1575,	3375,	5166,	6450,	8610,	9750,	11250,	13425,	14250,	15750],
                [1664,	3520,	5652.48,	6784,	9420.8,	10240,	11840,	14016,	15040,	16640],
                [1751,	3655,	6156.72,	7106,	10261.2,	10710,	12410,	14569,	15810,	17510],
                [1836,	3780,	6678.72,	7416,	11131.2,	11160,	12960,	15084,	16560,	18360],
                [1919,	3895,	7218.48,	7714,	12030.8,	11590,	13490,	15561,	17290,	19190],
                [2000,	4000,	7776,	8000,	12960,	12000,	14000,	16000,	18000,	20000],
                [2205,	4410,	8573.04,	8820,	14288.4,	13230,	15435,	17640,	19845,	22050],
                [2420,	4840,	9408.96,	9680,	15681.6,	14520,	16940,	19360,	21780,	24200],
                [2645,	5290,	10283.76,	10580,	17139.6,	15870,	18515,	21160,	23805,	26450],
                [2880,	5760,	11197.44,	11520,	18662.4,	17280,	20160,	23040,	25920,	28800],
                [3125,	6250,	12150,	12500,	20250,	18750,	21875,	25000,	28125,	31250],
                [3380,	6760,	13141.44,	13520,	21902.4,	20280,	23660,	27040,	30420,	33800],
                [3645,	7290,	14171.76,	14580,	23619.6,	21870,	25515,	29160,	32805,	36450],
                [3920,	7840,	15240.96,	15680,	25401.6,	23520,	27440,	31360,	35280,	39200],
                [4205,	8410,	16349.04,	16820,	27248.4,	25230,	29435,	33640,	37845,	42050],
                [4500,	9000,	17496,	18000,	29160,	27000,	31500,	36000,	40500,	45000]]
def find_nearest(array,value):
    idx = np.searchsorted(array, value, side="left")
    if idx > 0 and (idx == len(array) or math.fabs(value - array[idx-1]) < math.fabs(value - array[idx])):
        return array[idx-1]
    else:
        return array[idx]
    
def api_home(request, *args, **kwargs):
    data=None
    score=0
    try:
        data=json.loads(request.body)
        data=dict(data)
        if data:
            level=data['level']
            habit=data['habit']
            scorelow=scores_array[round(level)-1][math.floor(habit)-1]
            scorehigh=scores_array[round(level)-1][math.ceil(habit)-1]
            scoreaverage=(scorelow+scorehigh)/2
            return JsonResponse({"target score": scoreaverage})
    except:
        pass
    
    return JsonResponse({"message":"This is the the amazing gameonomics platform. Please provied a level and a habit in json format to get the target score!"})
